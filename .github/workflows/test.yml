name: "Test"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:buster
    env:
      DB_HOST: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: 5432
      JWT_PRIVATE_KEY: aaaa
      VOTER_EULA: TODO VOTER EULA
      AUTH_EULA: TODO AUTH EULA
      NETWORK_CHAIN_ID_POLYGON: 80001
      NETWORK_NAME_POLYGON: polygon
      NETWORK_PATH_POLYGON: m/44H/60H/0H/0/0
      NETWORK_RPC_URL_POLYGON: ${{ secrets.NETWORK_RPC_URL_POLYGON }}
      NETWORK_CHAIN_ID_ETHEREUM: 1
      NETWORK_NAME_ETHEREUM: ethereum
      NETWORK_PATH_ETHEREUM: m/44H/60H/0H/0/0
      NETWORK_RPC_URL_ETHEREUM: ${{ secrets.NETWORK_RPC_URL_ETHEREUM }}
      TOKEN: aa

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install gotestsum
        run: go get -u gotest.tools/gotestsum
      - uses: actions/checkout@v2
      - name: Build
        run: go build -v ./...
      - name: Test
        run: LOAD_CONFIG_FILE=false gotestsum
